---
import Map from '../../../components/Map.astro'
/* ─────────────────────────────────────────────────────────────────────────────
   Simulated data for the clinic/medic detail page
   Replace with real API calls using the [id] parameter
───────────────────────────────────────────────────────────────────────────── */

// Get the ID from the URL parameters
const { id } = Astro.params;

// Simulated provider data (replace with actual API call using the id)
const provider = {
  id: id,
  name: "Dr. Sarah Johnson",
  specialty: "Cardiologist",
  type: "doctor",
  rating: 4.9,
  reviews: 127,
  location: "Downtown Medical Center",
  address: "123 Medical Plaza, Downtown City",
  phone: "+1 (555) 123-4567",
  email: "contact@downtownmedical.com",
  initials: "SJ",
  description: "Experienced cardiologist with over 15 years of practice. Specialized in preventive cardiology and heart disease management.",
};

// Simulated available time slots
const availableSlots = [
  { date: "2025-06-07", slots: ["09:00", "10:30", "14:00", "15:30"] },
  { date: "2025-06-08", slots: ["08:30", "11:00", "16:00"] },
  { date: "2025-06-09", slots: ["09:30", "13:00", "14:30", "17:00"] },
  { date: "2025-06-10", slots: ["10:00", "11:30", "15:00"] },
];

// Simulated user reviews
const reviews = [
  {
    id: 1,
    userName: "Maria Silva",
    rating: 5,
    date: "2025-05-28",
    comment: "Excellent professional! Very attentive and explained everything clearly. Highly recommend!",
    initials: "MS"
  },
  {
    id: 2,
    userName: "João Santos",
    rating: 5,
    date: "2025-05-25",
    comment: "Dr. Sarah is amazing. She took time to listen to all my concerns and provided great care.",
    initials: "JS"
  },
  {
    id: 3,
    userName: "Ana Costa",
    rating: 4,
    date: "2025-05-20",
    comment: "Very professional service. The clinic is well-organized and the staff is friendly.",
    initials: "AC"
  },
];

const userProfile = {
  firstName: "John",
  lastName: "Doe",
  initials: "JD",
};

const appointmentData = {
    providerId: "{provider.id}",
    providerName: "{provider.name}",
};
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>MedFinder - {provider.name}</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/lucide/0.263.1/umd/lucide.js"></script>
    <style>
      :root {
        --primary: #0B9A7A;
        --primary-dark: #097F66;
        --secondary: #F5F9F8;
        --text-dark: #16403C;
        --text-light: #6A8784;
        --accent: #E6F5F2;
      }

      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }

      body {
        font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
        background: linear-gradient(135deg, var(--primary) 0%, var(--primary-dark) 100%);
        min-height: 100vh;
        color: var(--text-dark);
      }

      .container {
        display: flex;
        min-height: 100vh;
        max-width: 1400px;
        margin: 0 auto;
        background: white;
        box-shadow: 0 0 50px rgba(0,0,0,0.1);
      }

      /* ─── Sidebar (same as index) ───────────────────────────────────────── */
      .sidebar {
        width: 280px;
        background: linear-gradient(180deg, var(--text-dark) 0%, var(--primary-dark) 100%);
        padding: 2rem 0;
        display: flex;
        flex-direction: column;
        position: relative;
      }

      .logo {
        padding: 0 2rem;
        margin-bottom: 3rem;
      }

      .logo h1 {
        color: white;
        font-size: 1.8rem;
        font-weight: 700;
        display: flex;
        align-items: center;
        gap: 0.5rem;
      }

      .logo .icon {
        width: 32px;
        height: 32px;
        background: linear-gradient(45deg, var(--primary), var(--accent));
        border-radius: 8px;
        display: flex;
        align-items: center;
        justify-content: center;
      }

      .nav-menu {
        flex: 1;
        padding: 0 1rem;
      }

      .nav-item {
        display: flex;
        align-items: center;
        gap: 1rem;
        padding: 1rem 1.5rem;
        margin: 0.5rem 0;
        color: var(--text-light);
        cursor: pointer;
        border-radius: 12px;
        transition: all 0.3s ease;
        position: relative;
      }

      .nav-item:hover {
        background: rgba(255, 255, 255, 0.1);
        color: white;
        transform: translateX(5px);
      }

      .nav-item.active {
        background: linear-gradient(135deg, var(--primary), var(--primary-dark));
        color: white;
        box-shadow: 0 4px 15px rgba(11, 154, 122, 0.3);
      }

      .logout-section {
        padding: 0 1rem;
        border-top: 1px solid rgba(255, 255, 255, 0.1);
        padding-top: 1rem;
      }

      /* ─── Main Content ───────────────────────────────────────────────────── */
      .main-content {
        flex: 1;
        display: flex;
        flex-direction: column;
        background: var(--secondary);
      }

      .header {
        background: white;
        padding: 1.5rem 2rem;
        border-bottom: 1px solid var(--accent);
        display: flex;
        justify-content: space-between;
        align-items: center;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
      }

      .back-button {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        background: none;
        border: none;
        color: var(--text-light);
        cursor: pointer;
        font-size: 1rem;
        transition: all 0.3s ease;
      }

      .back-button:hover {
        color: var(--primary);
        transform: translateX(-5px);
      }

      .user-profile {
        display: flex;
        align-items: center;
        gap: 1rem;
      }

      .notification-btn {
        position: relative;
        padding: 0.5rem;
        border: none;
        background: none;
        cursor: pointer;
        border-radius: 50%;
        transition: background 0.3s ease;
      }

      .notification-btn:hover {
        background: var(--secondary);
      }

      .notification-badge {
        position: absolute;
        top: 0;
        right: 0;
        width: 8px;
        height: 8px;
        background: #e74c3c;
        border-radius: 50%;
      }

      .user-avatar {
        width: 40px;
        height: 40px;
        background: linear-gradient(45deg, var(--primary), var(--primary-dark));
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-weight: 600;
      }

      .content-area {
        flex: 1;
        padding: 2rem;
        overflow-y: auto;
      }

      /* ─── Provider Header Section ────────────────────────────────────────── */
      .provider-header-section {
        background: white;
        border-radius: 20px;
        padding: 2rem;
        margin-bottom: 2rem;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
        border: 2px solid var(--accent);
      }

      .provider-main-info {
        display: flex;
        align-items: center;
        gap: 2rem;
      }

      .provider-avatar {
        width: 100px;
        height: 100px;
        background: linear-gradient(45deg, var(--primary), var(--primary-dark));
        border-radius: 20px;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-size: 2.5rem;
        font-weight: 700;
        box-shadow: 0 8px 25px rgba(11, 154, 122, 0.3);
      }

      .provider-details h1 {
        font-size: 2.5rem;
        font-weight: 700;
        color: var(--text-dark);
        margin-bottom: 0.5rem;
      }

      .provider-specialty {
        font-size: 1.2rem;
        color: var(--primary);
        font-weight: 600;
        margin-bottom: 1rem;
      }

      .provider-rating {
        display: flex;
        align-items: center;
        gap: 1rem;
        margin-bottom: 1rem;
      }

      .stars {
        color: #f39c12;
        font-size: 1.2rem;
      }

      .rating-text {
        color: var(--text-light);
        font-weight: 500;
      }

      .provider-contact {
        display: flex;
        gap: 2rem;
        flex-wrap: wrap;
      }

      .contact-item {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        color: var(--text-light);
      }

      /* ─── Map Section ────────────────────────────────────────────────────── */
      .map-section {
        background: white;
        border-radius: 20px;
        padding: 2rem;
        margin-bottom: 2rem;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
        border: 2px solid var(--accent);
      }

      .map-header {
        display: flex;
        align-items: center;
        gap: 1rem;
        margin-bottom: 1.5rem;
      }

      .map-header h2 {
        color: var(--text-dark);
        font-size: 1.5rem;
        font-weight: 600;
      }

      .map-placeholder {
        width: 100%;
        height: 400px;
        background: linear-gradient(135deg, var(--accent) 0%, var(--secondary) 100%);
        border-radius: 15px;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        border: 2px dashed var(--primary);
        color: var(--text-light);
        font-size: 1.1rem;
      }

      .map-placeholder i {
        width: 48px;
        height: 48px;
        margin-bottom: 1rem;
        color: var(--primary);
      }

      /* ─── Appointment Section ────────────────────────────────────────────── */
      .appointment-section {
        background: white;
        border-radius: 20px;
        padding: 2rem;
        margin-bottom: 2rem;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
        border: 2px solid var(--accent);
      }

      .section-header {
        display: flex;
        align-items: center;
        gap: 1rem;
        margin-bottom: 2rem;
      }

      .section-header h2 {
        color: var(--text-dark);
        font-size: 1.5rem;
        font-weight: 600;
      }

      .calendar-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 1.5rem;
        margin-bottom: 2rem;
      }

      .date-card {
        background: var(--secondary);
        border-radius: 15px;
        padding: 1.5rem;
        border: 2px solid var(--accent);
        transition: all 0.3s ease;
        cursor: pointer;
      }

      .date-card:hover {
        border-color: var(--primary);
        transform: translateY(-2px);
        box-shadow: 0 6px 20px rgba(11, 154, 122, 0.15);
      }

      .date-card.selected {
        background: linear-gradient(135deg, var(--primary), var(--primary-dark));
        color: white;
        border-color: var(--primary-dark);
      }

      .date-header {
        font-weight: 600;
        font-size: 1.1rem;
        margin-bottom: 1rem;
        color: var(--text-dark);
      }

      .date-card.selected .date-header {
        color: white;
      }

      .time-slots {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        gap: 0.5rem;
      }

      .time-slot {
        padding: 0.5rem;
        background: white;
        border-radius: 8px;
        text-align: center;
        font-size: 0.9rem;
        font-weight: 500;
        transition: all 0.3s ease;
        cursor: pointer;
        border: 1px solid var(--accent);
      }

      .time-slot:hover {
        background: var(--primary);
        color: white;
      }

      .date-card.selected .time-slot {
        background: rgba(255, 255, 255, 0.2);
        color: white;
        border-color: rgba(255, 255, 255, 0.3);
      }

      .date-card.selected .time-slot:hover {
        background: rgba(255, 255, 255, 0.3);
      }

      .appointment-form {
        background: var(--secondary);
        border-radius: 15px;
        padding: 2rem;
        border: 2px solid var(--accent);
      }

      .form-row {
        display: flex;
        gap: 1rem;
        margin-bottom: 1rem;
      }

      .form-group {
        flex: 1;
      }

      .form-group label {
        display: block;
        margin-bottom: 0.5rem;
        font-weight: 600;
        color: var(--text-dark);
      }

      .form-input {
        width: 100%;
        padding: 0.75rem 1rem;
        border: 2px solid var(--accent);
        border-radius: 10px;
        font-size: 1rem;
        outline: none;
        transition: all 0.3s ease;
      }

      .form-input:focus {
        border-color: var(--primary);
        box-shadow: 0 0 0 3px rgba(11, 154, 122, 0.1);
      }

      .book-btn {
        background: linear-gradient(135deg, var(--primary), var(--primary-dark));
        color: white;
        border: none;
        padding: 1rem 2rem;
        border-radius: 25px;
        font-size: 1.1rem;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        width: 100%;
        margin-top: 1rem;
      }

      .book-btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 25px rgba(11, 154, 122, 0.3);
      }

      /* ─── Reviews Section ────────────────────────────────────────────────── */
      .reviews-section {
        background: white;
        border-radius: 20px;
        padding: 2rem;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
        border: 2px solid var(--accent);
      }

      .reviews-grid {
        display: grid;
        gap: 1.5rem;
      }

      .review-card {
        background: var(--secondary);
        border-radius: 15px;
        padding: 1.5rem;
        border: 1px solid var(--accent);
        transition: all 0.3s ease;
      }

      .review-card:hover {
        transform: translateY(-2px);
        box-shadow: 0 6px 20px rgba(0, 0, 0, 0.1);
      }

      .review-header {
        display: flex;
        align-items: center;
        gap: 1rem;
        margin-bottom: 1rem;
      }

      .reviewer-avatar {
        width: 50px;
        height: 50px;
        background: linear-gradient(45deg, var(--primary), var(--primary-dark));
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-weight: 600;
      }

      .reviewer-info h4 {
        color: var(--text-dark);
        font-weight: 600;
        margin-bottom: 0.25rem;
      }

      .review-date {
        color: var(--text-light);
        font-size: 0.9rem;
      }

      .review-rating {
        margin-left: auto;
        color: #f39c12;
      }

      .review-comment {
        color: var(--text-dark);
        line-height: 1.6;
      }

      @media (max-width: 768px) {
        .container {
          flex-direction: column;
        }

        .sidebar {
          width: 100%;
          flex-direction: row;
          padding: 1rem;
          order: 2;
        }

        .nav-menu {
          display: flex;
          gap: 1rem;
          overflow-x: auto;
        }

        .nav-item {
          white-space: nowrap;
          min-width: fit-content;
        }

        .provider-main-info {
          flex-direction: column;
          text-align: center;
        }

        .provider-contact {
          justify-content: center;
        }

        .calendar-grid {
          grid-template-columns: 1fr;
        }

        .form-row {
          flex-direction: column;
        }
      }
    </style>
  </head>

  <body>
    <div class="container">
      <div class="main-content">
        <header class="header">
          <button class="back-button" onclick="history.back()">
            <i data-lucide="arrow-left"></i>
            <span>Voltar</span>
          </button>

          <div class="user-profile">
            <button class="notification-btn">
              <i data-lucide="bell"></i>
              <div class="notification-badge"></div>
            </button>
            <div class="user-avatar">{userProfile.initials}</div>
          </div>
        </header>

        <div class="content-area">
          <!-- ─── Provider Header Section ─────────────────────────────────────── -->
          <div class="provider-header-section">
            <div class="provider-main-info">
              <div class="provider-avatar">
                {provider.initials}
              </div>
              <div class="provider-details">
                <h1>{provider.name}</h1>
                <div class="provider-specialty">{provider.specialty}</div>
                <div class="provider-rating">
                  <div class="stars">★★★★★</div>
                  <span class="rating-text">
                    {provider.rating} ({provider.reviews} avaliações)
                  </span>
                </div>
                <div class="provider-contact">
                  <div class="contact-item">
                    <i data-lucide="map-pin"></i>
                    <span>{provider.address}</span>
                  </div>
                  <div class="contact-item">
                    <i data-lucide="phone"></i>
                    <span>{provider.phone}</span>
                  </div>
                  <div class="contact-item">
                    <i data-lucide="mail"></i>
                    <span>{provider.email}</span>
                  </div>
                </div>
              </div>
            </div>
          </div>

          <!-- ─── Map Section ──────────────────────────────────────────────────── -->
          <div class="map-section">
            <div class="map-header">
              <i data-lucide="map"></i>
              <h2>Localização e Rota</h2>
            </div>
            <div class="map-placeholder">
              <i data-lucide="map-pin"></i>
              <Map />
              <small>Rota entre você e {provider.name}</small>
            </div>
          </div>

          <!-- ─── Appointment Section ─────────────────────────────────────────── -->
          <div class="appointment-section">
            <div class="section-header">
              <i data-lucide="calendar-plus"></i>
              <h2>Agendar Consulta</h2>
            </div>

            <div class="calendar-grid">
              {availableSlots.map((daySlot) => (
                <div class="date-card" data-date={daySlot.date}>
                  <div class="date-header">
                    {new Date(daySlot.date).toLocaleDateString('pt-BR', { 
                      weekday: 'long', 
                      day: 'numeric', 
                      month: 'long' 
                    })}
                  </div>
                  <div class="time-slots">
                    {daySlot.slots.map((slot) => (
                      <div class="time-slot" data-time={slot}>{slot}</div>
                    ))}
                  </div>
                </div>
              ))}
            </div>

            <div class="appointment-form">
              <div class="form-row">
                <div class="form-group">
                  <label for="patientName">Nome Completo</label>
                  <input type="text" id="patientName" class="form-input" value={`${userProfile.firstName} ${userProfile.lastName}`} />
                </div>
                <div class="form-group">
                  <label for="patientPhone">Telefone</label>
                  <input type="tel" id="patientPhone" class="form-input" placeholder="(11) 99999-9999" />
                </div>
              </div>
              <div class="form-row">
                <div class="form-group">
                  <label for="appointmentType">Tipo de Consulta</label>
                  <select id="appointmentType" class="form-input">
                    <option>Consulta Regular</option>
                    <option>Consulta de Retorno</option>
                    <option>Consulta de Urgência</option>
                  </select>
                </div>
                <div class="form-group">
                  <label for="insurance">Convênio</label>
                  <select id="insurance" class="form-input">
                    <option>Particular</option>
                    <option>SUS</option>
                    <option>Unimed</option>
                    <option>Bradesco Saúde</option>
                  </select>
                </div>
              </div>
              <div class="form-group">
                <label for="notes">Observações (opcional)</label>
                <textarea id="notes" class="form-input" rows="3" placeholder="Descreva brevemente o motivo da consulta ou observações importantes..."></textarea>
              </div>
              <button class="book-btn" onclick="bookAppointment()">
                <i data-lucide="calendar-check"></i>
                Confirmar Agendamento
              </button>
            </div>
          </div>

          <!-- ─── Reviews Section ──────────────────────────────────────────────── -->
          <div class="reviews-section">
            <div class="section-header">
              <i data-lucide="star"></i>
              <h2>Avaliações dos Pacientes</h2>
            </div>

            <div class="reviews-grid">
              {reviews.map((review) => (
                <div class="review-card">
                  <div class="review-header">
                    <div class="reviewer-avatar">
                      {review.initials}
                    </div>
                    <div class="reviewer-info">
                      <h4>{review.userName}</h4>
                      <div class="review-date">
                        {new Date(review.date).toLocaleDateString('pt-BR')}
                      </div>
                    </div>
                    <div class="review-rating">
                      {"★".repeat(review.rating)}
                    </div>
                  </div>
                  <div class="review-comment">
                    {review.comment}
                  </div>
                </div>
              ))}
            </div>
          </div>
        </div>
      </div>
    </div>

    <script>
      document.addEventListener("DOMContentLoaded", () => {
        // Render all Lucide icons
        lucide.replace();

        

        dateCards.forEach((card) => {
          card.addEventListener("click", () => {
            dateCards.forEach((c) => c.classList.remove("selected"));
            card.classList.add("selected");
            selectedDate = card.getAttribute("data-date");
            selectedTime = null; // Reset time selection
          });
        });

        timeSlots.forEach((slot) => {
          slot.addEventListener("click", () => {
            if (!selectedDate) {
              alert("Por favor, selecione uma data primeiro.");
              return;
            }
            
            // Remove selection from all time slots
            timeSlots.forEach((s) => s.classList.remove("selected"));
            slot.classList.add("selected");
            selectedTime = slot.getAttribute("data-time");
          });
        });

        // ─── Appointment Booking Logic ─────────────────────────────────────
        window.bookAppointment = () => {
          if (!selectedDate || !selectedTime) {
            alert("Por favor, selecione uma data e horário.");
            return;
          }


          console.log("Appointment data:", appointmentData);
          
          // TODO: Replace with actual API call
          // fetch('/api/appointments', {
          //   method: 'POST',
          //   headers: { 'Content-Type': 'application/json' },
          //   body: JSON.stringify(appointmentData)
          // })

          alert(`Agendamento confirmado!\n\nData: ${new Date(selectedDate).toLocaleDateString('pt-BR')}\nHorário: ${selectedTime}\nMédico: {provider.name}`);
        };

        // ─── Logout Function ──────────────────────────────────────────────
        window.logout = () => {
          window.location.href = "/logout";
        };
      });
    </script>
  </body>
</html>