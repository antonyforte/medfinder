---
import Sidebar from "../../components/Sidebar.astro";


/* ─────────────────────────────────────────────────────────────────────────────
   Simulated appointment data (replace with real API calls once your backend is ready)
───────────────────────────────────────────────────────────────────────────── */
const appointments = [
  {
    id: 1,
    doctorName: "Dr. Sarah Johnson",
    specialty: "Cardiologia",
    date: "2025-06-15",
    time: "10:00",
    status: "confirmed",
    location: "Downtown Medical Center",
    type: "Consulta de Rotina",
    notes: "Exames de acompanhamento cardíaco",
    initials: "SJ"
  },
  {
    id: 2,
    doctorName: "Dr. Michael Chen",
    specialty: "Dermatologia",
    date: "2025-06-20",
    time: "14:30",
    status: "pending",
    location: "Skin Health Institute",
    type: "Primeira Consulta",
    notes: "Avaliação de manchas na pele",
    initials: "MC"
  },
  {
    id: 3,
    doctorName: "Dr. Ana Silva",
    specialty: "Oftalmologia",
    date: "2025-06-10",
    time: "09:15",
    status: "completed",
    location: "Vision Care Center",
    type: "Exame de Vista",
    notes: "Consulta realizada com sucesso",
    initials: "AS"
  },
  {
    id: 4,
    doctorName: "Dr. Roberto Lima",
    specialty: "Clínica Geral",
    date: "2025-05-28",
    time: "16:00",
    status: "completed",
    location: "Family Health Clinic",
    type: "Check-up Anual",
    notes: "Exames gerais de saúde",
    initials: "RL"
  },
  {
    id: 5,
    doctorName: "Dr. Carla Santos",
    specialty: "Psiquiatria",
    date: "2025-06-25",
    time: "11:00",
    status: "confirmed",
    location: "Mental Health Center",
    type: "Terapia",
    notes: "Sessão de acompanhamento",
    initials: "CS"
  },
  {
    id: 6,
    doctorName: "Dr. João Ferreira",
    specialty: "Dentista",
    date: "2025-05-15",
    time: "08:30",
    status: "cancelled",
    location: "Smile Dental Clinic",
    type: "Limpeza",
    notes: "Cancelado pelo paciente",
    initials: "JF"
  }
];

const userProfile = {
  firstName: "John",
  lastName: "Doe",
  email: "john.doe@example.com",
  initials: "JD",
};
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>MedFinder - Agendamentos</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/lucide/0.263.1/umd/lucide.js"></script>
    <style>
      :root {
        --primary: #0B9A7A;
        --primary-dark: #097F66;
        --secondary: #F5F9F8;
        --text-dark: #16403C;
        --text-light: #6A8784;
        --accent: #E6F5F2;
        --success: #27ae60;
        --warning: #f39c12;
        --danger: #e74c3c;
        --info: #3498db;
      }

      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }

      body {
        font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
        background: linear-gradient(135deg, var(--primary) 0%, var(--primary-dark) 100%);
        min-height: 100vh;
        color: var(--text-dark);
      }

      .container {
        display: flex;
        min-height: 100vh;
        max-width: 1400px;
        margin: 0 auto;
        background: white;
        box-shadow: 0 0 50px rgba(0,0,0,0.1);
      }

      /* ─── Sidebar ────────────────────────────────────────────────────────── */

      /* ─── Main Content ───────────────────────────────────────────────────── */
      .main-content {
        flex: 1;
        display: flex;
        flex-direction: column;
        background: var(--secondary);
        margin-left: 280px;
        padding: 2rem;
      }

      .header {
        background: white;
        padding: 1.5rem 2rem;
        border-bottom: 1px solid var(--accent);
        display: flex;
        justify-content: space-between;
        align-items: center;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
      }

      .page-title {
        font-size: 2rem;
        font-weight: 700;
        color: var(--text-dark);
      }

      .user-profile {
        display: flex;
        align-items: center;
        gap: 1rem;
      }

      .notification-btn {
        position: relative;
        padding: 0.5rem;
        border: none;
        background: none;
        cursor: pointer;
        border-radius: 50%;
        transition: background 0.3s ease;
      }

      .notification-btn:hover {
        background: var(--secondary);
      }

      .notification-badge {
        position: absolute;
        top: 0;
        right: 0;
        width: 8px;
        height: 8px;
        background: #e74c3c;
        border-radius: 50%;
      }

      .user-avatar {
        width: 40px;
        height: 40px;
        background: linear-gradient(45deg, var(--primary), var(--primary-dark));
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-weight: 600;
      }

      .content-area {
        flex: 1;
        padding: 2rem;
        overflow-y: auto;
      }

      /* ─── Appointment Filters ─────────────────────────────────────────── */
      .filters {
        display: flex;
        gap: 1rem;
        margin-bottom: 2rem;
        flex-wrap: wrap;
      }

      .filter-btn {
        padding: 0.75rem 1.5rem;
        border: 2px solid var(--accent);
        background: white;
        border-radius: 25px;
        cursor: pointer;
        transition: all 0.3s ease;
        font-weight: 500;
        color: var(--text-dark);
      }

      .filter-btn:hover,
      .filter-btn.active {
        background: var(--primary);
        color: white;
        border-color: var(--primary);
        transform: translateY(-2px);
        box-shadow: 0 4px 15px rgba(11, 154, 122, 0.3);
      }

      /* ─── Appointments List ──────────────────────────────────────────── */
      .appointments-container {
        display: flex;
        flex-direction: column;
        gap: 1.5rem;
      }

      .appointment-card {
        background: white;
        border-radius: 15px;
        padding: 2rem;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease;
        border-left: 5px solid;
        position: relative;
      }

      .appointment-card:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 30px rgba(0, 0, 0, 0.15);
      }

      .appointment-card.confirmed {
        border-left-color: var(--success);
      }

      .appointment-card.pending {
        border-left-color: var(--warning);
      }

      .appointment-card.completed {
        border-left-color: var(--info);
      }

      .appointment-card.cancelled {
        border-left-color: var(--danger);
        opacity: 0.7;
      }

      .appointment-header {
        display: flex;
        justify-content: between;
        align-items: flex-start;
        margin-bottom: 1.5rem;
        gap: 1.5rem;
      }

      .appointment-main-info {
        display: flex;
        gap: 1.5rem;
        flex: 1;
      }

      .doctor-avatar {
        width: 60px;
        height: 60px;
        background: linear-gradient(45deg, var(--primary), var(--primary-dark));
        border-radius: 12px;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-size: 1.5rem;
        font-weight: 600;
        flex-shrink: 0;
      }

      .appointment-info {
        flex: 1;
      }

      .appointment-info h3 {
        font-size: 1.3rem;
        font-weight: 600;
        margin-bottom: 0.5rem;
        color: var(--text-dark);
      }

      .appointment-specialty {
        color: var(--text-light);
        font-size: 1rem;
        margin-bottom: 0.5rem;
      }

      .appointment-type {
        background: var(--accent);
        color: var(--primary-dark);
        padding: 0.25rem 0.75rem;
        border-radius: 15px;
        font-size: 0.8rem;
        font-weight: 500;
        display: inline-block;
      }

      .appointment-status {
        display: flex;
        flex-direction: column;
        align-items: flex-end;
        gap: 0.5rem;
      }

      .status-badge {
        padding: 0.5rem 1rem;
        border-radius: 20px;
        font-size: 0.8rem;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
      }

      .status-badge.confirmed {
        background: rgba(39, 174, 96, 0.1);
        color: var(--success);
      }

      .status-badge.pending {
        background: rgba(243, 156, 18, 0.1);
        color: var(--warning);
      }

      .status-badge.completed {
        background: rgba(52, 152, 219, 0.1);
        color: var(--info);
      }

      .status-badge.cancelled {
        background: rgba(231, 76, 60, 0.1);
        color: var(--danger);
      }

      .appointment-datetime {
        font-size: 0.9rem;
        color: var(--text-light);
      }

      .appointment-details {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 1.5rem;
        margin-top: 1.5rem;
        padding-top: 1.5rem;
        border-top: 1px solid var(--accent);
      }

      .detail-item {
        display: flex;
        align-items: center;
        gap: 0.75rem;
        color: var(--text-light);
        font-size: 0.95rem;
      }

      .detail-item i {
        color: var(--primary);
        width: 18px;
        height: 18px;
      }

      .appointment-actions {
        display: flex;
        gap: 1rem;
        margin-top: 1.5rem;
        padding-top: 1.5rem;
        border-top: 1px solid var(--accent);
      }

      .action-btn {
        padding: 0.75rem 1.5rem;
        border: none;
        border-radius: 8px;
        cursor: pointer;
        font-weight: 500;
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
        gap: 0.5rem;
      }

      .action-btn.primary {
        background: var(--primary);
        color: white;
      }

      .action-btn.primary:hover {
        background: var(--primary-dark);
      }

      .action-btn.secondary {
        background: var(--secondary);
        color: var(--text-dark);
        border: 1px solid var(--accent);
      }

      .action-btn.secondary:hover {
        background: var(--accent);
      }

      .action-btn.danger {
        background: var(--danger);
        color: white;
      }

      .action-btn.danger:hover {
        background: #c0392b;
      }

      .empty-state {
        text-align: center;
        padding: 4rem 2rem;
        color: var(--text-light);
      }

      .empty-state i {
        font-size: 4rem;
        margin-bottom: 1rem;
        color: var(--accent);
      }

      .empty-state h3 {
        font-size: 1.5rem;
        margin-bottom: 0.5rem;
        color: var(--text-dark);
      }

      @media (max-width: 768px) {
        .container {
          flex-direction: column;
        }

        .sidebar {
          width: 100%;
          flex-direction: row;
          padding: 1rem;
          order: 2;
        }

        .nav-menu {
          display: flex;
          gap: 1rem;
          overflow-x: auto;
        }

        .nav-item {
          white-space: nowrap;
          min-width: fit-content;
        }

        .appointment-header {
          flex-direction: column;
          gap: 1rem;
        }

        .appointment-main-info {
          flex-direction: column;
        }

        .appointment-status {
          align-items: flex-start;
        }

        .appointment-details {
          grid-template-columns: 1fr;
        }

        .appointment-actions {
          flex-direction: column;
        }
      }
    </style>
  </head>

  <body>
    <div class="container">
      <!-- ─── Sidebar ─────────────────────────────────────────────────────────── -->
      <Sidebar currentPage="appointments" userInitials="JD" />


      <div class="main-content">
        <header class="header">
          <h1 class="page-title">Meus Agendamentos</h1>

          <div class="user-profile">
            <button class="notification-btn">
              <i data-lucide="bell"></i>
              <div class="notification-badge"></div>
            </button>
            <div class="user-avatar">{userProfile.initials}</div>
          </div>
        </header>

        <div class="content-area">
          <div class="filters">
            <button class="filter-btn active" data-filter="all">
              Todos
            </button>
            <button class="filter-btn" data-filter="confirmed">
              Confirmados
            </button>
            <button class="filter-btn" data-filter="pending">
              Pendentes
            </button>
            <button class="filter-btn" data-filter="completed">
              Realizados
            </button>
            <button class="filter-btn" data-filter="cancelled">
              Cancelados
            </button>
          </div>

          <div class="appointments-container">
            {appointments.map((appointment) => (
              <div
                class={`appointment-card ${appointment.status}`}
                data-status={appointment.status}
                key={appointment.id}
              >
                <div class="appointment-header">
                  <div class="appointment-main-info">
                    <div class="doctor-avatar">
                      {appointment.initials}
                    </div>
                    <div class="appointment-info">
                      <h3>{appointment.doctorName}</h3>
                      <div class="appointment-specialty">
                        {appointment.specialty}
                      </div>
                      <div class="appointment-type">
                        {appointment.type}
                      </div>
                    </div>
                  </div>
                  <div class="appointment-status">
                    <div class={`status-badge ${appointment.status}`}>
                      {appointment.status === 'confirmed' && 'Confirmado'}
                      {appointment.status === 'pending' && 'Pendente'}
                      {appointment.status === 'completed' && 'Realizado'}
                      {appointment.status === 'cancelled' && 'Cancelado'}
                    </div>
                    <div class="appointment-datetime">
                      {new Date(appointment.date).toLocaleDateString('pt-BR')} às {appointment.time}
                    </div>
                  </div>
                </div>

                <div class="appointment-details">
                  <div class="detail-item">
                    <i data-lucide="map-pin"></i>
                    <span>{appointment.location}</span>
                  </div>
                  <div class="detail-item">
                    <i data-lucide="clock"></i>
                    <span>{appointment.time}</span>
                  </div>
                  <div class="detail-item">
                    <i data-lucide="calendar"></i>
                    <span>{new Date(appointment.date).toLocaleDateString('pt-BR', { 
                      weekday: 'long',
                      year: 'numeric',
                      month: 'long',
                      day: 'numeric'
                    })}</span>
                  </div>
                  <div class="detail-item">
                    <i data-lucide="file-text"></i>
                    <span>{appointment.notes}</span>
                  </div>
                </div>

                {appointment.status !== 'completed' && appointment.status !== 'cancelled' && (
                  <div class="appointment-actions">
                    {appointment.status === 'confirmed' && (
                      <>
                        <button class="action-btn primary" onclick={`rescheduleAppointment(${appointment.id})`}>
                          <i data-lucide="calendar"></i>
                          Reagendar
                        </button>
                        <button class="action-btn secondary" onclick={`viewDetails(${appointment.id})`}>
                          <i data-lucide="eye"></i>
                          Ver Detalhes
                        </button>
                        <button class="action-btn danger" onclick={`cancelAppointment(${appointment.id})`}>
                          <i data-lucide="x"></i>
                          Cancelar
                        </button>
                      </>
                    )}
                    {appointment.status === 'pending' && (
                      <>
                        <button class="action-btn primary" onclick={`confirmAppointment(${appointment.id})`}>
                          <i data-lucide="check"></i>
                          Confirmar
                        </button>
                        <button class="action-btn secondary" onclick={`rescheduleAppointment(${appointment.id})`}>
                          <i data-lucide="calendar"></i>
                          Reagendar
                        </button>
                        <button class="action-btn danger" onclick={`cancelAppointment(${appointment.id})`}>
                          <i data-lucide="x"></i>
                          Cancelar
                        </button>
                      </>
                    )}
                  </div>
                )}
              </div>
            ))}
          </div>
        </div>
      </div>
    </div>

    <script>
      document.addEventListener("DOMContentLoaded", () => {
        // Render all Lucide icons
        lucide.replace();

        // ─── Filter Logic ─────────────────────────────────────────────────
        const filterBtns = document.querySelectorAll(".filter-btn");
        const appointmentCards = document.querySelectorAll(".appointment-card");

        filterBtns.forEach((btn) => {
          btn.addEventListener("click", () => {
            filterBtns.forEach((b) => b.classList.remove("active"));
            btn.classList.add("active");
            const filter = btn.getAttribute("data-filter");

            appointmentCards.forEach((card) => {
              const status = card.getAttribute("data-status");
              if (filter === "all" || status === filter) {
                card.style.display = "block";
              } else {
                card.style.display = "none";
              }
            });
          });
        });

        // ─── Appointment Actions ─────────────────────────────────────────
        window.confirmAppointment = (id) => {
          console.log(`Confirming appointment ${id}`);
          alert("Agendamento confirmado!");
          // TODO: Implement API call
        };

        window.rescheduleAppointment = (id) => {
          console.log(`Rescheduling appointment ${id}`);
          alert("Funcionalidade de reagendamento em desenvolvimento");
          // TODO: Implement rescheduling modal/page
        };

        window.cancelAppointment = (id) => {
          if (confirm("Tem certeza que deseja cancelar este agendamento?")) {
            console.log(`Cancelling appointment ${id}`);
            alert("Agendamento cancelado!");
            // TODO: Implement API call
          }
        };

        window.viewDetails = (id) => {
          console.log(`Viewing details for appointment ${id}`);
          alert("Abrindo detalhes do agendamento");
          // TODO: Implement details modal or redirect
        };

        // ─── Logout ───────────────────────────────────────────────────────
        window.logout = () => {
          window.location.href = "/logout";
        };
      });
    </script>
  </body>
</html>